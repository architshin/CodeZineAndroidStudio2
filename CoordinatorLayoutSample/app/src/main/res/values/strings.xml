<?xml version="1.0" encoding="utf-8"?>
<!--
CodeZine
Android Studio 2で始めるアプリ開発入門
スクロール連動サンプル

@author Shinzo SAITO

res/values/string.xmlファイル
-->
<resources>
	<string name="app_name">ツールバーサンプル</string>
	<string name="tv_article">Androidアプリでのメディア再生\n\nAndroidアプリを開発するにはAndroid Studioを使います。そのAndroid Studioのメジャーアップデートであるバージョン2.0が正式公開されました。本連載では、最新のAndroid Studio 2系を使い、Androidアプリ開発の基本を解説していきます。前回はインターネットに接続し、外部サービスとデータのやり取りするWeb API連携の方法を解説しました。今回は、Androidでのメディアの再生を扱います。\nstrings.xml、activity_media_control.xmlはダウンロードサンプルのソースコードをコピーしてください。\n今回は、音声ファイルを使用します。効果音ラボというサイトの環境音のページより好きなものをダウンロードしてください。ダウンロードサンプルでは、「渓流」を使用しています｡\nダウンロードした音声ファイルをMediaSampleプロジェクトのリソースファイルとして格納します。その際、Androidのコーディング規約として、リソースファイル名には小文字とアンダーバーのみしか使えません。そこで、適当にリネームします。ダウンロードサンプルでは、「mountain-stream1.mp3」というファイル名を「mountain_stream.mp3」に変更しています。リネームが済んだファイルを、resフォルダ配下に「raw」フォルダを作成し、そこに格納してください。\nこの状態で、一度アプリを起動してみてください。以下のような画面になっているはずです。\nボタンが3個とスイッチ1個のシンプルな画面です。ただし、これらボタンは押せないようになっています。これは、レイアウトxmlで\nandroid:enabled=\"false\"\nという記述があるからです。今から、再生ボタンをタップすると、先にダウンロードした音声ファイルが再生されるようにソースコードを記述していきます。その際、音声ファイルの再生準備が整うまで、ボタンが押されないようにしてあるのです。\n\nAndroidで音声ファイルを再生するにはMediaPlayerクラスを使用します。以下のソースコードを記述してください。\n上記（3）はあらかじめ記述されているコードです。\n現在押せないようになっているボタンですが、後に押せるように変更します。そのためにフィールドとして保持し、onCreate()内で中身を取得しておきます。それが（2）と（4）です。\n同様に、MediaPlayerオブジェクトに関しても、他のメソッド内で操作するので、フィールドで宣言し、onCreate()内でnewします。それが（1）と（5）です。\nこのMediaPlayerで再生する音声ファイルを指定するのがsetDataSource()メソッドです。その際、第1引数としてコンテキストを、第2引数として音声ファイルのUriオブジェクトを指定します。それが（8）です。\nなお、事前に第2引数で使用するUriオブジェクトを生成しています。それが（6）と（7）です。（6）でURI文字列を生成しています。アプリ内のリソース音声ファイルを表すURI文字列は\nandroid.resource://アプリのルートパッケージ/リソースファイルのR値\nで表します。ここでは、アプリのルートパッケージである「com.websarva.wings.android.mediasample」を直接記述せずにgetPackageName()で取得しています。\n（7）では、こうして生成されたURI文字列からUriクラスのparse()メソッドを使用してUriオブジェクトを生成しています。\n音声ファイルの指定ができたら、このファイルを読み込んで再生準備をさせますが、非同期で準備させた方が安全です。それが（11）で、prepareAsync()メソッドを使います。その際、準備が完了したときの処理を行うリスナクラスの設定が必要です。それが（9）です。リスナクラスは後で記述します。\n同様に、音声ファイルの再生が終了した際に行う処理のリスナクラスを設定しているのが（10）です。こちらも後で記述します。</string>
	<string name="toolbar_title">Material!</string>
	<string name="toolbar_subtitle">ツールバーを使用</string>
</resources>
